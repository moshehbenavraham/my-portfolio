/* Tailwind Directives */
/* These lines import Tailwind CSS's base styles, components, and utilities */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom styles */
/* @layer is used to add custom styles to Tailwind's layers */
@layer base {
  /* 
   * :root defines CSS variables (custom properties) that can be used throughout the stylesheet.
   * This is a good place to define global variables like colors or font sizes that can be reused
   * across your entire CSS file.
   */
  :root {
    --primary-color: #646cff; /* Primary color variable */
    --secondary-color: #535bf2; /* Secondary color variable */
    
    /*
     * The text-size-adjust property allows the text to resize (or not) when the user zooms in or out
     * on a mobile device. The value 100% means no automatic resizing will happen.
     * The -webkit-text-size-adjust is the older version for WebKit browsers (e.g., older versions of Safari).
     * text-size-adjust is the standard property for modern browsers.
     */
    -webkit-text-size-adjust: 100%; /* Older browsers compatibility */
    text-size-adjust: 100%; /* Standard property for modern browsers */
  }

  /* Styles for the body element */
  body {
    /*
     * @apply is a Tailwind directive that lets you use Tailwind utility classes in custom CSS.
     * min-h-screen makes the body element at least as tall as the screen.
     * flex enables flexbox on the body, and flex-col sets the direction to column,
     * meaning children will stack vertically.
     */
    @apply min-h-screen flex flex-col;
    
    /* Apply the same text-size-adjust to the body to ensure consistent text resizing behavior */
    -webkit-text-size-adjust: 100%; /* Older browsers compatibility */
    text-size-adjust: 100%; /* Standard property for modern browsers */
  }

  /* Styles for anchor tags (a) and buttons (button) */
  a, button {
    /*
     * -webkit-tap-highlight-color is a property specific to WebKit browsers (like Safari and Chrome).
     * It prevents the blue highlight that appears when you tap a link or button on a touch device.
     * Setting it to transparent makes the highlight invisible, providing a cleaner experience on mobile.
     */
    -webkit-tap-highlight-color: transparent;
  }
}

/* Component styles */
@layer components {
  /* .container class for layout control */
  .container {
    @apply w-full max-w-6xl mx-auto px-4;
  }

  /* Base button styles */
  .btn {
    @apply inline-block py-2 px-4 rounded font-medium uppercase transition duration-300 ease-in-out;
  }

  /* Primary button styles */
  .btn-primary {
    @apply bg-[var(--primary-color)] text-white hover:bg-opacity-90 hover:-translate-y-0.5 hover:shadow-md;
  }

  /* Secondary button styles */
  .btn-secondary {
    @apply bg-transparent text-white border-2 border-white hover:bg-white hover:text-[var(--primary-color)] hover:-translate-y-0.5 hover:shadow-md;
  }
}

/* Utility classes for specific elements and sections */
@layer utilities {
  /* Hero section styles */
  .hero {
    @apply text-center py-24 bg-[var(--primary-color)] text-white;
  }

  .hero h1 {
    @apply text-5xl mb-2;
  }

  .hero h2 {
    @apply text-3xl mb-4;
  }

  /* Profile picture styles */
  .profile-pic {
    @apply w-48 h-48 rounded-full mx-auto my-8 border-4 border-white shadow-lg;
  }

  /* About section styles */
  .about-details {
    @apply flex flex-wrap justify-between mt-8;
  }

  .detail {
    @apply flex-1 min-w-[calc(33.333%-2rem)] m-4 p-6 bg-white rounded-lg shadow-md transition duration-300 ease-in-out hover:-translate-y-1 hover:shadow-lg dark:bg-gray-800;
  }

  /* Skills section styles */
  .skills-grid {
    @apply grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 mt-8;
  }

  .skill {
    @apply text-center p-8 bg-white rounded-lg shadow-md transition duration-300 ease-in-out hover:-translate-y-1 hover:shadow-lg dark:bg-gray-800;
  }

  /* Project section styles */
  .project-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8;
  }

  .project {
    @apply bg-white rounded-lg overflow-hidden shadow-md transition duration-300 ease-in-out hover:-translate-y-1 hover:shadow-lg flex flex-col dark:bg-gray-800;
  }

  .project-image {
    @apply w-full h-48 object-cover;
  }

  .project-content {
    @apply p-4 flex-grow flex flex-col;
  }

  .project .btn {
    @apply mt-auto;
    /* This ensures the button stays at the bottom */
  }

  /* Contact section styles */
  .contact-info {
    @apply flex flex-col items-center mt-8;
  }

/* This code controls how the mobile menu looks and behaves on smaller screens */

/* @media is a special rule that applies styles only when certain conditions are met */
/* In this case, these styles apply when the screen width is 768 pixels or less */
@media (max-width: 768px) {
  /* This targets the unordered list (ul) inside the navigation (nav) */
  nav ul {
    /* Hide the menu by default on mobile */
    display: none;
    
    /* Arrange menu items in a column instead of a row */
    flex-direction: column;
    
    /* Position the menu absolutely, right below the header */
    position: absolute;
    top: 100%;  /* This puts it right under the header */
    left: 0;    /* Aligns it to the left edge of the screen */
    
    /* Make the menu take up the full width of the screen */
    width: 100%;
    
    /* Set the background color of the menu */
    background-color: #1a202c; /* This should match your header background color */
    
    /* Add some space inside the menu */
    padding: 1rem;  /* 1rem is a unit of measurement, usually equal to 16 pixels */
  }

  /* This style is applied when the 'flex' class is added to the menu */
  /* It's used to show the menu when the hamburger icon is clicked */
  nav ul.flex {
    display: flex;  /* This makes the menu visible */
  }

  /* This targets each list item in the navigation menu */
  nav ul li {
    /* Add some vertical space between menu items */
    margin: 0.5rem 0;  /* 0.5rem top and bottom, 0 left and right */
  }
}

}

/* Dark mode adjustments */
/* This media query applies styles when the user's system is set to dark mode */
@media (prefers-color-scheme: dark) {
  /* Redefine CSS variables for dark mode */
  :root {
    --background-color: #242424; /* Dark background color */
    --text-color: rgba(255, 255, 255, 0.87); /* Light text color with slight transparency */
  }

  /* Apply dark mode styles to the body */
  body {
    @apply bg-[var(--background-color)] text-[var(--text-color)];
    /* This sets the background and text color using the variables defined above */
  }

  /* Adjust the primary button style for dark mode */
  .btn-primary {
    @apply bg-[var(--primary-color)] text-white hover:bg-opacity-90;
    /* This keeps the button visible in dark mode and adds a hover effect */
  }
}

/* Styles that don't have direct Tailwind equivalents */
/* These styles are for icons within detail and skill elements */
.detail i,
.skill i {
  @apply text-3xl text-[var(--primary-color)] mb-4;
  /* This makes icons large, colored, and adds some bottom margin */
}

/* Header styles */
header {
  @apply bg-gray-800 text-white py-4 fixed w-full top-0 z-50;
  /* This creates a dark, full-width header that stays at the top of the page */
}

/* Navigation styles */
nav ul {
  @apply flex justify-center;
  /* This centers the navigation items horizontally */
}

nav ul li {
  @apply mx-4;
  /* This adds horizontal spacing between navigation items */
}

nav ul li a {
  @apply font-medium py-2 px-4 rounded transition duration-300 ease-in-out hover:bg-white hover:bg-opacity-10;
  /* This styles navigation links with padding, rounded corners, and a hover effect */
}

/* Footer styles */
footer {
  @apply bg-gray-800 text-white text-center py-4 mt-auto;
  /* This creates a dark footer that sticks to the bottom of the page */
}

/* EoF */